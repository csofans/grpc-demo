// Code generated by protoc-gen-go. DO NOT EDIT.
// source: demo/demo.proto

// 生成auth 套件

package demo

import (
	context "context"
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Role int32

const (
	Role_Nono   Role = 0
	Role_Super  Role = 1
	Role_Admin  Role = 2
	Role_Member Role = 3
)

var Role_name = map[int32]string{
	0: "Nono",
	1: "Super",
	2: "Admin",
	3: "Member",
}

var Role_value = map[string]int32{
	"Nono":   0,
	"Super":  1,
	"Admin":  2,
	"Member": 3,
}

func (x Role) String() string {
	return proto.EnumName(Role_name, int32(x))
}

func (Role) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_18ceb39d273bd4a9, []int{0}
}

// User -
type UserInfo struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Account              string   `protobuf:"bytes,2,opt,name=account,proto3" json:"account,omitempty"`
	Password             string   `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	Role                 Role     `protobuf:"varint,4,opt,name=role,proto3,enum=demo.Role" json:"role,omitempty"`
	Name                 string   `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserInfo) Reset()         { *m = UserInfo{} }
func (m *UserInfo) String() string { return proto.CompactTextString(m) }
func (*UserInfo) ProtoMessage()    {}
func (*UserInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ceb39d273bd4a9, []int{0}
}

func (m *UserInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserInfo.Unmarshal(m, b)
}
func (m *UserInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserInfo.Marshal(b, m, deterministic)
}
func (m *UserInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserInfo.Merge(m, src)
}
func (m *UserInfo) XXX_Size() int {
	return xxx_messageInfo_UserInfo.Size(m)
}
func (m *UserInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_UserInfo.DiscardUnknown(m)
}

var xxx_messageInfo_UserInfo proto.InternalMessageInfo

func (m *UserInfo) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UserInfo) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

func (m *UserInfo) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *UserInfo) GetRole() Role {
	if m != nil {
		return m.Role
	}
	return Role_Nono
}

func (m *UserInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type UserInfoResponse struct {
	Status               *StatusReply `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	User                 *UserInfo    `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *UserInfoResponse) Reset()         { *m = UserInfoResponse{} }
func (m *UserInfoResponse) String() string { return proto.CompactTextString(m) }
func (*UserInfoResponse) ProtoMessage()    {}
func (*UserInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ceb39d273bd4a9, []int{1}
}

func (m *UserInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserInfoResponse.Unmarshal(m, b)
}
func (m *UserInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserInfoResponse.Marshal(b, m, deterministic)
}
func (m *UserInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserInfoResponse.Merge(m, src)
}
func (m *UserInfoResponse) XXX_Size() int {
	return xxx_messageInfo_UserInfoResponse.Size(m)
}
func (m *UserInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UserInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UserInfoResponse proto.InternalMessageInfo

func (m *UserInfoResponse) GetStatus() *StatusReply {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *UserInfoResponse) GetUser() *UserInfo {
	if m != nil {
		return m.User
	}
	return nil
}

type UserListRequest struct {
	List                 *ListRequest `protobuf:"bytes,1,opt,name=list,proto3" json:"list,omitempty"`
	Role                 Role         `protobuf:"varint,2,opt,name=role,proto3,enum=demo.Role" json:"role,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *UserListRequest) Reset()         { *m = UserListRequest{} }
func (m *UserListRequest) String() string { return proto.CompactTextString(m) }
func (*UserListRequest) ProtoMessage()    {}
func (*UserListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ceb39d273bd4a9, []int{2}
}

func (m *UserListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserListRequest.Unmarshal(m, b)
}
func (m *UserListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserListRequest.Marshal(b, m, deterministic)
}
func (m *UserListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserListRequest.Merge(m, src)
}
func (m *UserListRequest) XXX_Size() int {
	return xxx_messageInfo_UserListRequest.Size(m)
}
func (m *UserListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UserListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UserListRequest proto.InternalMessageInfo

func (m *UserListRequest) GetList() *ListRequest {
	if m != nil {
		return m.List
	}
	return nil
}

func (m *UserListRequest) GetRole() Role {
	if m != nil {
		return m.Role
	}
	return Role_Nono
}

type UserListResponse struct {
	Total                int32       `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	User                 []*UserInfo `protobuf:"bytes,2,rep,name=user,proto3" json:"user,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *UserListResponse) Reset()         { *m = UserListResponse{} }
func (m *UserListResponse) String() string { return proto.CompactTextString(m) }
func (*UserListResponse) ProtoMessage()    {}
func (*UserListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ceb39d273bd4a9, []int{3}
}

func (m *UserListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserListResponse.Unmarshal(m, b)
}
func (m *UserListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserListResponse.Marshal(b, m, deterministic)
}
func (m *UserListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserListResponse.Merge(m, src)
}
func (m *UserListResponse) XXX_Size() int {
	return xxx_messageInfo_UserListResponse.Size(m)
}
func (m *UserListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UserListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UserListResponse proto.InternalMessageInfo

func (m *UserListResponse) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *UserListResponse) GetUser() []*UserInfo {
	if m != nil {
		return m.User
	}
	return nil
}

type UserListSteamResponse struct {
	Total                int32     `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	User                 *UserInfo `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *UserListSteamResponse) Reset()         { *m = UserListSteamResponse{} }
func (m *UserListSteamResponse) String() string { return proto.CompactTextString(m) }
func (*UserListSteamResponse) ProtoMessage()    {}
func (*UserListSteamResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ceb39d273bd4a9, []int{4}
}

func (m *UserListSteamResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserListSteamResponse.Unmarshal(m, b)
}
func (m *UserListSteamResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserListSteamResponse.Marshal(b, m, deterministic)
}
func (m *UserListSteamResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserListSteamResponse.Merge(m, src)
}
func (m *UserListSteamResponse) XXX_Size() int {
	return xxx_messageInfo_UserListSteamResponse.Size(m)
}
func (m *UserListSteamResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UserListSteamResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UserListSteamResponse proto.InternalMessageInfo

func (m *UserListSteamResponse) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *UserListSteamResponse) GetUser() *UserInfo {
	if m != nil {
		return m.User
	}
	return nil
}

type LoginRequest struct {
	Account              string   `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoginRequest) Reset()         { *m = LoginRequest{} }
func (m *LoginRequest) String() string { return proto.CompactTextString(m) }
func (*LoginRequest) ProtoMessage()    {}
func (*LoginRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ceb39d273bd4a9, []int{5}
}

func (m *LoginRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginRequest.Unmarshal(m, b)
}
func (m *LoginRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginRequest.Marshal(b, m, deterministic)
}
func (m *LoginRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginRequest.Merge(m, src)
}
func (m *LoginRequest) XXX_Size() int {
	return xxx_messageInfo_LoginRequest.Size(m)
}
func (m *LoginRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LoginRequest proto.InternalMessageInfo

func (m *LoginRequest) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

func (m *LoginRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type LoginResponse struct {
	Status               *StatusReply `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Token                string       `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *LoginResponse) Reset()         { *m = LoginResponse{} }
func (m *LoginResponse) String() string { return proto.CompactTextString(m) }
func (*LoginResponse) ProtoMessage()    {}
func (*LoginResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ceb39d273bd4a9, []int{6}
}

func (m *LoginResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginResponse.Unmarshal(m, b)
}
func (m *LoginResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginResponse.Marshal(b, m, deterministic)
}
func (m *LoginResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginResponse.Merge(m, src)
}
func (m *LoginResponse) XXX_Size() int {
	return xxx_messageInfo_LoginResponse.Size(m)
}
func (m *LoginResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LoginResponse proto.InternalMessageInfo

func (m *LoginResponse) GetStatus() *StatusReply {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *LoginResponse) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type LogoutRequest struct {
	Token                string   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LogoutRequest) Reset()         { *m = LogoutRequest{} }
func (m *LogoutRequest) String() string { return proto.CompactTextString(m) }
func (*LogoutRequest) ProtoMessage()    {}
func (*LogoutRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ceb39d273bd4a9, []int{7}
}

func (m *LogoutRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogoutRequest.Unmarshal(m, b)
}
func (m *LogoutRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogoutRequest.Marshal(b, m, deterministic)
}
func (m *LogoutRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogoutRequest.Merge(m, src)
}
func (m *LogoutRequest) XXX_Size() int {
	return xxx_messageInfo_LogoutRequest.Size(m)
}
func (m *LogoutRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LogoutRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LogoutRequest proto.InternalMessageInfo

func (m *LogoutRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type LogoutResponse struct {
	Status               *StatusReply `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *LogoutResponse) Reset()         { *m = LogoutResponse{} }
func (m *LogoutResponse) String() string { return proto.CompactTextString(m) }
func (*LogoutResponse) ProtoMessage()    {}
func (*LogoutResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ceb39d273bd4a9, []int{8}
}

func (m *LogoutResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogoutResponse.Unmarshal(m, b)
}
func (m *LogoutResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogoutResponse.Marshal(b, m, deterministic)
}
func (m *LogoutResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogoutResponse.Merge(m, src)
}
func (m *LogoutResponse) XXX_Size() int {
	return xxx_messageInfo_LogoutResponse.Size(m)
}
func (m *LogoutResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LogoutResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LogoutResponse proto.InternalMessageInfo

func (m *LogoutResponse) GetStatus() *StatusReply {
	if m != nil {
		return m.Status
	}
	return nil
}

// TokenListRequest -
type TokenListRequest struct {
	List                 *ListRequest `protobuf:"bytes,1,opt,name=list,proto3" json:"list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *TokenListRequest) Reset()         { *m = TokenListRequest{} }
func (m *TokenListRequest) String() string { return proto.CompactTextString(m) }
func (*TokenListRequest) ProtoMessage()    {}
func (*TokenListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ceb39d273bd4a9, []int{9}
}

func (m *TokenListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TokenListRequest.Unmarshal(m, b)
}
func (m *TokenListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TokenListRequest.Marshal(b, m, deterministic)
}
func (m *TokenListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TokenListRequest.Merge(m, src)
}
func (m *TokenListRequest) XXX_Size() int {
	return xxx_messageInfo_TokenListRequest.Size(m)
}
func (m *TokenListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TokenListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TokenListRequest proto.InternalMessageInfo

func (m *TokenListRequest) GetList() *ListRequest {
	if m != nil {
		return m.List
	}
	return nil
}

// TokenListResponse -
type TokenListResponse struct {
	// total  - 清單總數
	Total int32 `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	// data 清單內容
	Data                 []*TokenContext `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *TokenListResponse) Reset()         { *m = TokenListResponse{} }
func (m *TokenListResponse) String() string { return proto.CompactTextString(m) }
func (*TokenListResponse) ProtoMessage()    {}
func (*TokenListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ceb39d273bd4a9, []int{10}
}

func (m *TokenListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TokenListResponse.Unmarshal(m, b)
}
func (m *TokenListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TokenListResponse.Marshal(b, m, deterministic)
}
func (m *TokenListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TokenListResponse.Merge(m, src)
}
func (m *TokenListResponse) XXX_Size() int {
	return xxx_messageInfo_TokenListResponse.Size(m)
}
func (m *TokenListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TokenListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TokenListResponse proto.InternalMessageInfo

func (m *TokenListResponse) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *TokenListResponse) GetData() []*TokenContext {
	if m != nil {
		return m.Data
	}
	return nil
}

type TokenListStreamResponse struct {
	// total  - 清單總數
	Total int32 `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	// data 清單內容
	Data                 *TokenContext `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TokenListStreamResponse) Reset()         { *m = TokenListStreamResponse{} }
func (m *TokenListStreamResponse) String() string { return proto.CompactTextString(m) }
func (*TokenListStreamResponse) ProtoMessage()    {}
func (*TokenListStreamResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ceb39d273bd4a9, []int{11}
}

func (m *TokenListStreamResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TokenListStreamResponse.Unmarshal(m, b)
}
func (m *TokenListStreamResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TokenListStreamResponse.Marshal(b, m, deterministic)
}
func (m *TokenListStreamResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TokenListStreamResponse.Merge(m, src)
}
func (m *TokenListStreamResponse) XXX_Size() int {
	return xxx_messageInfo_TokenListStreamResponse.Size(m)
}
func (m *TokenListStreamResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TokenListStreamResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TokenListStreamResponse proto.InternalMessageInfo

func (m *TokenListStreamResponse) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *TokenListStreamResponse) GetData() *TokenContext {
	if m != nil {
		return m.Data
	}
	return nil
}

type TokenContext struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Token                string   `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	Userid               string   `protobuf:"bytes,3,opt,name=userid,proto3" json:"userid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TokenContext) Reset()         { *m = TokenContext{} }
func (m *TokenContext) String() string { return proto.CompactTextString(m) }
func (*TokenContext) ProtoMessage()    {}
func (*TokenContext) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ceb39d273bd4a9, []int{12}
}

func (m *TokenContext) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TokenContext.Unmarshal(m, b)
}
func (m *TokenContext) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TokenContext.Marshal(b, m, deterministic)
}
func (m *TokenContext) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TokenContext.Merge(m, src)
}
func (m *TokenContext) XXX_Size() int {
	return xxx_messageInfo_TokenContext.Size(m)
}
func (m *TokenContext) XXX_DiscardUnknown() {
	xxx_messageInfo_TokenContext.DiscardUnknown(m)
}

var xxx_messageInfo_TokenContext proto.InternalMessageInfo

func (m *TokenContext) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *TokenContext) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *TokenContext) GetUserid() string {
	if m != nil {
		return m.Userid
	}
	return ""
}

type ReportRequest struct {
	Start                *timestamp.Timestamp `protobuf:"bytes,1,opt,name=start,proto3" json:"start,omitempty"`
	End                  *timestamp.Timestamp `protobuf:"bytes,2,opt,name=end,proto3" json:"end,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ReportRequest) Reset()         { *m = ReportRequest{} }
func (m *ReportRequest) String() string { return proto.CompactTextString(m) }
func (*ReportRequest) ProtoMessage()    {}
func (*ReportRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ceb39d273bd4a9, []int{13}
}

func (m *ReportRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReportRequest.Unmarshal(m, b)
}
func (m *ReportRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReportRequest.Marshal(b, m, deterministic)
}
func (m *ReportRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReportRequest.Merge(m, src)
}
func (m *ReportRequest) XXX_Size() int {
	return xxx_messageInfo_ReportRequest.Size(m)
}
func (m *ReportRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReportRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReportRequest proto.InternalMessageInfo

func (m *ReportRequest) GetStart() *timestamp.Timestamp {
	if m != nil {
		return m.Start
	}
	return nil
}

func (m *ReportRequest) GetEnd() *timestamp.Timestamp {
	if m != nil {
		return m.End
	}
	return nil
}

//
type ReportResponse struct {
	Time                 *timestamp.Timestamp `protobuf:"bytes,1,opt,name=time,proto3" json:"time,omitempty"`
	Point                float64              `protobuf:"fixed64,2,opt,name=point,proto3" json:"point,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ReportResponse) Reset()         { *m = ReportResponse{} }
func (m *ReportResponse) String() string { return proto.CompactTextString(m) }
func (*ReportResponse) ProtoMessage()    {}
func (*ReportResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ceb39d273bd4a9, []int{14}
}

func (m *ReportResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReportResponse.Unmarshal(m, b)
}
func (m *ReportResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReportResponse.Marshal(b, m, deterministic)
}
func (m *ReportResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReportResponse.Merge(m, src)
}
func (m *ReportResponse) XXX_Size() int {
	return xxx_messageInfo_ReportResponse.Size(m)
}
func (m *ReportResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ReportResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ReportResponse proto.InternalMessageInfo

func (m *ReportResponse) GetTime() *timestamp.Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

func (m *ReportResponse) GetPoint() float64 {
	if m != nil {
		return m.Point
	}
	return 0
}

type ListRequest struct {
	Page                 int32    `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Size                 int32    `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListRequest) Reset()         { *m = ListRequest{} }
func (m *ListRequest) String() string { return proto.CompactTextString(m) }
func (*ListRequest) ProtoMessage()    {}
func (*ListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ceb39d273bd4a9, []int{15}
}

func (m *ListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRequest.Unmarshal(m, b)
}
func (m *ListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRequest.Marshal(b, m, deterministic)
}
func (m *ListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRequest.Merge(m, src)
}
func (m *ListRequest) XXX_Size() int {
	return xxx_messageInfo_ListRequest.Size(m)
}
func (m *ListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListRequest proto.InternalMessageInfo

func (m *ListRequest) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *ListRequest) GetSize() int32 {
	if m != nil {
		return m.Size
	}
	return 0
}

type StatusReply struct {
	Code                 int32                `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg                  string               `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Unix                 *timestamp.Timestamp `protobuf:"bytes,3,opt,name=unix,proto3" json:"unix,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *StatusReply) Reset()         { *m = StatusReply{} }
func (m *StatusReply) String() string { return proto.CompactTextString(m) }
func (*StatusReply) ProtoMessage()    {}
func (*StatusReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_18ceb39d273bd4a9, []int{16}
}

func (m *StatusReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatusReply.Unmarshal(m, b)
}
func (m *StatusReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatusReply.Marshal(b, m, deterministic)
}
func (m *StatusReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatusReply.Merge(m, src)
}
func (m *StatusReply) XXX_Size() int {
	return xxx_messageInfo_StatusReply.Size(m)
}
func (m *StatusReply) XXX_DiscardUnknown() {
	xxx_messageInfo_StatusReply.DiscardUnknown(m)
}

var xxx_messageInfo_StatusReply proto.InternalMessageInfo

func (m *StatusReply) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *StatusReply) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *StatusReply) GetUnix() *timestamp.Timestamp {
	if m != nil {
		return m.Unix
	}
	return nil
}

func init() {
	proto.RegisterEnum("demo.Role", Role_name, Role_value)
	proto.RegisterType((*UserInfo)(nil), "demo.UserInfo")
	proto.RegisterType((*UserInfoResponse)(nil), "demo.UserInfoResponse")
	proto.RegisterType((*UserListRequest)(nil), "demo.UserListRequest")
	proto.RegisterType((*UserListResponse)(nil), "demo.UserListResponse")
	proto.RegisterType((*UserListSteamResponse)(nil), "demo.UserListSteamResponse")
	proto.RegisterType((*LoginRequest)(nil), "demo.LoginRequest")
	proto.RegisterType((*LoginResponse)(nil), "demo.LoginResponse")
	proto.RegisterType((*LogoutRequest)(nil), "demo.LogoutRequest")
	proto.RegisterType((*LogoutResponse)(nil), "demo.LogoutResponse")
	proto.RegisterType((*TokenListRequest)(nil), "demo.TokenListRequest")
	proto.RegisterType((*TokenListResponse)(nil), "demo.TokenListResponse")
	proto.RegisterType((*TokenListStreamResponse)(nil), "demo.TokenListStreamResponse")
	proto.RegisterType((*TokenContext)(nil), "demo.TokenContext")
	proto.RegisterType((*ReportRequest)(nil), "demo.ReportRequest")
	proto.RegisterType((*ReportResponse)(nil), "demo.ReportResponse")
	proto.RegisterType((*ListRequest)(nil), "demo.ListRequest")
	proto.RegisterType((*StatusReply)(nil), "demo.StatusReply")
}

func init() { proto.RegisterFile("demo/demo.proto", fileDescriptor_18ceb39d273bd4a9) }

var fileDescriptor_18ceb39d273bd4a9 = []byte{
	// 760 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x54, 0x5b, 0x6f, 0xd3, 0x30,
	0x14, 0x6e, 0xda, 0x34, 0xac, 0xa7, 0x5b, 0xd7, 0x99, 0x5d, 0xaa, 0x22, 0x60, 0xb2, 0x34, 0x34,
	0x10, 0xb4, 0x53, 0xd1, 0x84, 0x06, 0x4f, 0x63, 0x93, 0x06, 0x52, 0x41, 0x2c, 0x1d, 0x97, 0xd7,
	0xac, 0xf1, 0x4a, 0x44, 0x12, 0x87, 0xd8, 0x11, 0x1b, 0xcf, 0xfc, 0x03, 0xfe, 0x2b, 0xcf, 0xc8,
	0x97, 0xa4, 0xce, 0xba, 0xee, 0xf2, 0x12, 0x1d, 0x1f, 0x7f, 0xe7, 0xcb, 0xb9, 0xf8, 0x7c, 0xb0,
	0xec, 0x93, 0x88, 0xf6, 0xc5, 0xa7, 0x97, 0xa4, 0x94, 0x53, 0x64, 0x0b, 0xbb, 0xfb, 0x78, 0x42,
	0xe9, 0x24, 0x24, 0x7d, 0xe9, 0x3b, 0xcd, 0xce, 0xfa, 0x3c, 0x88, 0x08, 0xe3, 0x5e, 0x94, 0x28,
	0x18, 0xfe, 0x63, 0xc1, 0xc2, 0x67, 0x46, 0xd2, 0xf7, 0xf1, 0x19, 0x45, 0x2d, 0xa8, 0x06, 0x7e,
	0xc7, 0xda, 0xb4, 0xb6, 0x1b, 0x6e, 0x35, 0xf0, 0x51, 0x07, 0xee, 0x79, 0xe3, 0x31, 0xcd, 0x62,
	0xde, 0xa9, 0x4a, 0x67, 0x7e, 0x44, 0x5d, 0x58, 0x48, 0x3c, 0xc6, 0x7e, 0xd1, 0xd4, 0xef, 0xd4,
	0xe4, 0x55, 0x71, 0x46, 0x8f, 0xc0, 0x4e, 0x69, 0x48, 0x3a, 0xf6, 0xa6, 0xb5, 0xdd, 0x1a, 0x40,
	0x4f, 0x26, 0xe5, 0xd2, 0x90, 0xb8, 0xd2, 0x8f, 0x10, 0xd8, 0xb1, 0x17, 0x91, 0x8e, 0x23, 0xe3,
	0xa4, 0x8d, 0x3d, 0x68, 0xe7, 0x59, 0xb8, 0x84, 0x25, 0x34, 0x66, 0x04, 0x3d, 0x05, 0x87, 0x71,
	0x8f, 0x67, 0x4c, 0x66, 0xd4, 0x1c, 0xac, 0x28, 0xa6, 0x91, 0xf4, 0xb9, 0x24, 0x09, 0x2f, 0x5c,
	0x0d, 0x40, 0x18, 0xec, 0x8c, 0x91, 0x54, 0x66, 0xd9, 0x1c, 0xb4, 0x14, 0xb0, 0x20, 0x94, 0x77,
	0xf8, 0x1b, 0x2c, 0x0b, 0xcf, 0x30, 0x60, 0xdc, 0x25, 0x3f, 0x33, 0xc2, 0x38, 0xda, 0x02, 0x3b,
	0x0c, 0x18, 0x2f, 0xf3, 0x1b, 0x00, 0x57, 0x5e, 0x17, 0x05, 0x55, 0xaf, 0x2e, 0x08, 0x0f, 0x55,
	0xf2, 0x2a, 0x50, 0x27, 0xbf, 0x0a, 0x75, 0x4e, 0xb9, 0x17, 0x4a, 0xee, 0xba, 0xab, 0x0e, 0x46,
	0x9e, 0xb5, 0xb9, 0x79, 0x1e, 0xc3, 0x5a, 0xce, 0x36, 0xe2, 0xc4, 0x8b, 0x6e, 0x4d, 0x39, 0xbf,
	0xf4, 0x43, 0x58, 0x1c, 0xd2, 0x49, 0x10, 0xe7, 0x75, 0x1b, 0x73, 0xb5, 0xe6, 0xcf, 0xb5, 0x5a,
	0x9e, 0x2b, 0xfe, 0x04, 0x4b, 0x9a, 0xe5, 0xee, 0x03, 0x92, 0xb9, 0xff, 0x20, 0xb1, 0x26, 0x55,
	0x07, 0xbc, 0x25, 0x19, 0x69, 0x56, 0x0c, 0xa4, 0x80, 0x59, 0x26, 0xec, 0x0d, 0xb4, 0x72, 0xd8,
	0x9d, 0xff, 0x8c, 0xf7, 0xa0, 0x7d, 0x22, 0x58, 0xee, 0x3e, 0x77, 0x7c, 0x0c, 0x2b, 0x46, 0xe8,
	0xb5, 0x53, 0x78, 0x02, 0xb6, 0xef, 0x71, 0x4f, 0x0f, 0x16, 0x29, 0x46, 0x19, 0x7c, 0x40, 0x63,
	0x4e, 0xce, 0xb9, 0x2b, 0xef, 0xf1, 0x57, 0xd8, 0x28, 0x28, 0x47, 0x3c, 0xbd, 0x79, 0xbc, 0x53,
	0x62, 0xeb, 0x5a, 0xe2, 0x21, 0x2c, 0x9a, 0xde, 0x99, 0x55, 0xbe, 0x72, 0x00, 0x68, 0x1d, 0x1c,
	0xf1, 0x40, 0x82, 0x7c, 0x89, 0xf5, 0x09, 0x53, 0x58, 0x72, 0x49, 0x42, 0xd3, 0xa2, 0x63, 0x3b,
	0x50, 0x67, 0xdc, 0x4b, 0xf3, 0x96, 0x75, 0x7b, 0x4a, 0x57, 0x7a, 0xb9, 0xae, 0xf4, 0x4e, 0x72,
	0x5d, 0x71, 0x15, 0x10, 0x3d, 0x87, 0x1a, 0x89, 0x7d, 0x9d, 0xf7, 0x75, 0x78, 0x01, 0xc3, 0x5f,
	0xa0, 0x95, 0xff, 0x50, 0xb7, 0xa3, 0x07, 0xb6, 0xd0, 0xaa, 0x5b, 0xfc, 0x50, 0xe2, 0x44, 0x81,
	0x09, 0x0d, 0xb4, 0x52, 0x59, 0xae, 0x3a, 0xe0, 0x5d, 0x68, 0x9a, 0x83, 0x47, 0x60, 0x27, 0xde,
	0x84, 0xe8, 0x16, 0x4b, 0x5b, 0xf8, 0x58, 0xf0, 0x5b, 0x6d, 0x77, 0xdd, 0x95, 0x36, 0x1e, 0x43,
	0xd3, 0x78, 0x4b, 0x02, 0x32, 0xa6, 0x7e, 0x11, 0x26, 0x6c, 0xd4, 0x86, 0x5a, 0xc4, 0x26, 0xba,
	0x9d, 0xc2, 0x14, 0x19, 0x67, 0x71, 0x70, 0x2e, 0x5b, 0x79, 0x43, 0xc6, 0x02, 0xf7, 0x6c, 0x00,
	0xb6, 0x10, 0x11, 0xb4, 0x00, 0xf6, 0x47, 0x1a, 0xd3, 0x76, 0x05, 0x35, 0xa0, 0x3e, 0xca, 0x12,
	0x92, 0xb6, 0x2d, 0x61, 0xee, 0xfb, 0x51, 0x10, 0xb7, 0xab, 0x08, 0xc0, 0xf9, 0x40, 0xa2, 0x53,
	0x92, 0xb6, 0x6b, 0x83, 0xbf, 0x55, 0xb0, 0xc5, 0x72, 0xa3, 0x17, 0xe0, 0x1c, 0xa4, 0xc4, 0xe3,
	0x04, 0x5d, 0x5a, 0xf9, 0xee, 0xec, 0x2e, 0xe0, 0x8a, 0x80, 0x1f, 0x92, 0x90, 0xdc, 0x16, 0xde,
	0x87, 0xda, 0x11, 0xe1, 0x33, 0xd8, 0xf5, 0x4b, 0xea, 0xa2, 0x67, 0x85, 0x2b, 0xe8, 0x15, 0xd8,
	0xa2, 0xcf, 0x68, 0x6d, 0x8a, 0x30, 0xfa, 0x6e, 0x06, 0x9a, 0xcb, 0x84, 0x2b, 0xe8, 0x00, 0x1a,
	0x85, 0xd2, 0xcd, 0x8b, 0x7e, 0x50, 0x76, 0x97, 0x54, 0x11, 0x57, 0x76, 0xac, 0xc1, 0x3f, 0x0b,
	0xec, 0xfd, 0x8c, 0x7f, 0x47, 0x03, 0xa8, 0x4b, 0x89, 0x42, 0x7a, 0x51, 0x4c, 0xd5, 0xeb, 0xde,
	0x2f, 0xf9, 0x8a, 0x0c, 0x76, 0xc1, 0x51, 0xea, 0x82, 0xa6, 0x80, 0xa9, 0x24, 0x75, 0x57, 0xcb,
	0xce, 0x22, 0x6c, 0x4f, 0x57, 0xbc, 0x6e, 0xac, 0xa4, 0x99, 0xf4, 0xc6, 0x8c, 0xbf, 0x08, 0x7d,
	0xa7, 0x1e, 0xe5, 0xdb, 0x0b, 0x55, 0xf5, 0x3c, 0x86, 0x87, 0x97, 0xfc, 0x65, 0xbd, 0x90, 0x85,
	0x1f, 0x82, 0xa3, 0xd6, 0x06, 0xbd, 0x86, 0xc6, 0x11, 0xd1, 0x90, 0xbc, 0x90, 0xd2, 0x0a, 0xe7,
	0x85, 0x94, 0xd7, 0x4c, 0xb0, 0x9c, 0x3a, 0xf2, 0x89, 0xbe, 0xfc, 0x1f, 0x00, 0x00, 0xff, 0xff,
	0x2c, 0x3c, 0x8b, 0x48, 0x44, 0x08, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// UserClient is the client API for User service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserClient interface {
	// 檢查 Token 是否存在
	Create(ctx context.Context, in *UserInfo, opts ...grpc.CallOption) (*StatusReply, error)
	//
	Delete(ctx context.Context, in *UserInfo, opts ...grpc.CallOption) (*StatusReply, error)
	//
	Get(ctx context.Context, in *UserInfo, opts ...grpc.CallOption) (*UserInfoResponse, error)
	//
	List(ctx context.Context, in *UserListRequest, opts ...grpc.CallOption) (*UserListResponse, error)
	//
	ListSteam(ctx context.Context, in *UserListRequest, opts ...grpc.CallOption) (User_ListSteamClient, error)
}

type userClient struct {
	cc *grpc.ClientConn
}

func NewUserClient(cc *grpc.ClientConn) UserClient {
	return &userClient{cc}
}

func (c *userClient) Create(ctx context.Context, in *UserInfo, opts ...grpc.CallOption) (*StatusReply, error) {
	out := new(StatusReply)
	err := c.cc.Invoke(ctx, "/demo.User/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userClient) Delete(ctx context.Context, in *UserInfo, opts ...grpc.CallOption) (*StatusReply, error) {
	out := new(StatusReply)
	err := c.cc.Invoke(ctx, "/demo.User/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userClient) Get(ctx context.Context, in *UserInfo, opts ...grpc.CallOption) (*UserInfoResponse, error) {
	out := new(UserInfoResponse)
	err := c.cc.Invoke(ctx, "/demo.User/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userClient) List(ctx context.Context, in *UserListRequest, opts ...grpc.CallOption) (*UserListResponse, error) {
	out := new(UserListResponse)
	err := c.cc.Invoke(ctx, "/demo.User/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userClient) ListSteam(ctx context.Context, in *UserListRequest, opts ...grpc.CallOption) (User_ListSteamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_User_serviceDesc.Streams[0], "/demo.User/ListSteam", opts...)
	if err != nil {
		return nil, err
	}
	x := &userListSteamClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type User_ListSteamClient interface {
	Recv() (*UserListSteamResponse, error)
	grpc.ClientStream
}

type userListSteamClient struct {
	grpc.ClientStream
}

func (x *userListSteamClient) Recv() (*UserListSteamResponse, error) {
	m := new(UserListSteamResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// UserServer is the server API for User service.
type UserServer interface {
	// 檢查 Token 是否存在
	Create(context.Context, *UserInfo) (*StatusReply, error)
	//
	Delete(context.Context, *UserInfo) (*StatusReply, error)
	//
	Get(context.Context, *UserInfo) (*UserInfoResponse, error)
	//
	List(context.Context, *UserListRequest) (*UserListResponse, error)
	//
	ListSteam(*UserListRequest, User_ListSteamServer) error
}

// UnimplementedUserServer can be embedded to have forward compatible implementations.
type UnimplementedUserServer struct {
}

func (*UnimplementedUserServer) Create(ctx context.Context, req *UserInfo) (*StatusReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedUserServer) Delete(ctx context.Context, req *UserInfo) (*StatusReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}
func (*UnimplementedUserServer) Get(ctx context.Context, req *UserInfo) (*UserInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedUserServer) List(ctx context.Context, req *UserListRequest) (*UserListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method List not implemented")
}
func (*UnimplementedUserServer) ListSteam(req *UserListRequest, srv User_ListSteamServer) error {
	return status.Errorf(codes.Unimplemented, "method ListSteam not implemented")
}

func RegisterUserServer(s *grpc.Server, srv UserServer) {
	s.RegisterService(&_User_serviceDesc, srv)
}

func _User_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/demo.User/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServer).Create(ctx, req.(*UserInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _User_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/demo.User/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServer).Delete(ctx, req.(*UserInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _User_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/demo.User/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServer).Get(ctx, req.(*UserInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _User_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/demo.User/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServer).List(ctx, req.(*UserListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _User_ListSteam_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(UserListRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(UserServer).ListSteam(m, &userListSteamServer{stream})
}

type User_ListSteamServer interface {
	Send(*UserListSteamResponse) error
	grpc.ServerStream
}

type userListSteamServer struct {
	grpc.ServerStream
}

func (x *userListSteamServer) Send(m *UserListSteamResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _User_serviceDesc = grpc.ServiceDesc{
	ServiceName: "demo.User",
	HandlerType: (*UserServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _User_Create_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _User_Delete_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _User_Get_Handler,
		},
		{
			MethodName: "List",
			Handler:    _User_List_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ListSteam",
			Handler:       _User_ListSteam_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "demo/demo.proto",
}

// AuthClient is the client API for Auth service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AuthClient interface {
	// 儲存 Token
	Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginResponse, error)
	// 刪除 Token
	Logout(ctx context.Context, in *LogoutRequest, opts ...grpc.CallOption) (*LogoutResponse, error)
	//
	List(ctx context.Context, in *TokenListRequest, opts ...grpc.CallOption) (*TokenListResponse, error)
	//
	ListBySteam(ctx context.Context, in *TokenListRequest, opts ...grpc.CallOption) (Auth_ListBySteamClient, error)
}

type authClient struct {
	cc *grpc.ClientConn
}

func NewAuthClient(cc *grpc.ClientConn) AuthClient {
	return &authClient{cc}
}

func (c *authClient) Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginResponse, error) {
	out := new(LoginResponse)
	err := c.cc.Invoke(ctx, "/demo.Auth/Login", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authClient) Logout(ctx context.Context, in *LogoutRequest, opts ...grpc.CallOption) (*LogoutResponse, error) {
	out := new(LogoutResponse)
	err := c.cc.Invoke(ctx, "/demo.Auth/Logout", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authClient) List(ctx context.Context, in *TokenListRequest, opts ...grpc.CallOption) (*TokenListResponse, error) {
	out := new(TokenListResponse)
	err := c.cc.Invoke(ctx, "/demo.Auth/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authClient) ListBySteam(ctx context.Context, in *TokenListRequest, opts ...grpc.CallOption) (Auth_ListBySteamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Auth_serviceDesc.Streams[0], "/demo.Auth/ListBySteam", opts...)
	if err != nil {
		return nil, err
	}
	x := &authListBySteamClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Auth_ListBySteamClient interface {
	Recv() (*TokenListStreamResponse, error)
	grpc.ClientStream
}

type authListBySteamClient struct {
	grpc.ClientStream
}

func (x *authListBySteamClient) Recv() (*TokenListStreamResponse, error) {
	m := new(TokenListStreamResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// AuthServer is the server API for Auth service.
type AuthServer interface {
	// 儲存 Token
	Login(context.Context, *LoginRequest) (*LoginResponse, error)
	// 刪除 Token
	Logout(context.Context, *LogoutRequest) (*LogoutResponse, error)
	//
	List(context.Context, *TokenListRequest) (*TokenListResponse, error)
	//
	ListBySteam(*TokenListRequest, Auth_ListBySteamServer) error
}

// UnimplementedAuthServer can be embedded to have forward compatible implementations.
type UnimplementedAuthServer struct {
}

func (*UnimplementedAuthServer) Login(ctx context.Context, req *LoginRequest) (*LoginResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Login not implemented")
}
func (*UnimplementedAuthServer) Logout(ctx context.Context, req *LogoutRequest) (*LogoutResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Logout not implemented")
}
func (*UnimplementedAuthServer) List(ctx context.Context, req *TokenListRequest) (*TokenListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method List not implemented")
}
func (*UnimplementedAuthServer) ListBySteam(req *TokenListRequest, srv Auth_ListBySteamServer) error {
	return status.Errorf(codes.Unimplemented, "method ListBySteam not implemented")
}

func RegisterAuthServer(s *grpc.Server, srv AuthServer) {
	s.RegisterService(&_Auth_serviceDesc, srv)
}

func _Auth_Login_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoginRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServer).Login(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/demo.Auth/Login",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServer).Login(ctx, req.(*LoginRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Auth_Logout_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LogoutRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServer).Logout(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/demo.Auth/Logout",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServer).Logout(ctx, req.(*LogoutRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Auth_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TokenListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/demo.Auth/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServer).List(ctx, req.(*TokenListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Auth_ListBySteam_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(TokenListRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(AuthServer).ListBySteam(m, &authListBySteamServer{stream})
}

type Auth_ListBySteamServer interface {
	Send(*TokenListStreamResponse) error
	grpc.ServerStream
}

type authListBySteamServer struct {
	grpc.ServerStream
}

func (x *authListBySteamServer) Send(m *TokenListStreamResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _Auth_serviceDesc = grpc.ServiceDesc{
	ServiceName: "demo.Auth",
	HandlerType: (*AuthServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Login",
			Handler:    _Auth_Login_Handler,
		},
		{
			MethodName: "Logout",
			Handler:    _Auth_Logout_Handler,
		},
		{
			MethodName: "List",
			Handler:    _Auth_List_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ListBySteam",
			Handler:       _Auth_ListBySteam_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "demo/demo.proto",
}

// ReportClient is the client API for Report service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ReportClient interface {
	GetStream(ctx context.Context, in *ReportRequest, opts ...grpc.CallOption) (Report_GetStreamClient, error)
}

type reportClient struct {
	cc *grpc.ClientConn
}

func NewReportClient(cc *grpc.ClientConn) ReportClient {
	return &reportClient{cc}
}

func (c *reportClient) GetStream(ctx context.Context, in *ReportRequest, opts ...grpc.CallOption) (Report_GetStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Report_serviceDesc.Streams[0], "/demo.Report/GetStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &reportGetStreamClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Report_GetStreamClient interface {
	Recv() (*ReportResponse, error)
	grpc.ClientStream
}

type reportGetStreamClient struct {
	grpc.ClientStream
}

func (x *reportGetStreamClient) Recv() (*ReportResponse, error) {
	m := new(ReportResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// ReportServer is the server API for Report service.
type ReportServer interface {
	GetStream(*ReportRequest, Report_GetStreamServer) error
}

// UnimplementedReportServer can be embedded to have forward compatible implementations.
type UnimplementedReportServer struct {
}

func (*UnimplementedReportServer) GetStream(req *ReportRequest, srv Report_GetStreamServer) error {
	return status.Errorf(codes.Unimplemented, "method GetStream not implemented")
}

func RegisterReportServer(s *grpc.Server, srv ReportServer) {
	s.RegisterService(&_Report_serviceDesc, srv)
}

func _Report_GetStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ReportRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ReportServer).GetStream(m, &reportGetStreamServer{stream})
}

type Report_GetStreamServer interface {
	Send(*ReportResponse) error
	grpc.ServerStream
}

type reportGetStreamServer struct {
	grpc.ServerStream
}

func (x *reportGetStreamServer) Send(m *ReportResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _Report_serviceDesc = grpc.ServiceDesc{
	ServiceName: "demo.Report",
	HandlerType: (*ReportServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetStream",
			Handler:       _Report_GetStream_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "demo/demo.proto",
}
